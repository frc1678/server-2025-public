import sys
import utils
import pytest

import generate_test_data
from generate_test_data import DataGenerator, parse_args

CORRECT_SCHEMA_DATAPOINT_COLLECTIONS = [
    # Auto Paths
    {
        "team_number": "4665",
        "score_1_successes": 9,
        "score_2_successes": 91,
        "score_3_successes": 40,
        "score_4_successes": 16,
        "score_5_successes": 3,
        "score_6_successes": 97,
        "score_7_successes": 78,
        "score_8_successes": 94,
        "score_9_successes": 10,
    },
    # Auto PIM
    {
        "team_number": "4665",
        "match_number": 1,
        "obj_tim.start_position": "1",
        "obj_tim.has_preload": False,
        "tba_tim.leave": True,
        "intake_position_1": "CFGUbNQaaS",
        "intake_position_2": "hqDboQqcsg",
        "intake_position_3": "ExAYuSUGxDR",
        "intake_position_4": "gzaKlLZIkvO",
        "intake_position_5": "rebMuSkyCfiTAXA",
        "intake_position_6": "BsDHXSHGR",
        "intake_position_7": "ZxUsoGxJ",
        "intake_position_8": "ilPyvU",
        "score_1": "AoFwTXZHxmiPfu",
        "score_2": "FJIpUnyfoPse",
        "score_3": "HhrzSuWUNjXGwfeC",
        "score_4": "mdzKqIouCQZI",
        "score_5": "QDExmxBnfo",
        "score_6": "HFQPFWQjb",
        "score_7": "HzNruBUfAJ",
        "score_8": "zxtFDOLonHDXm",
        "score_9": "liUWVTQIaJ",
    },
    # Obj Team
    {
        "team_number": "4665",
        "avg_time_left_to_climb": 64.0459,
        "lfm_avg_time_left_to_climb": 29.9917,
        "sd_time_left_to_climb": 58.841,
        "lfm_sd_time_left_to_climb": 51.8524,
        "max_time_left_to_climb": 59,
        "lfm_max_time_left_to_climb": 56,
        "tele_avg_incap": 71.995,
        "auto_avg_coral_L1": 15.3305,
        "auto_avg_coral_L2": 16.5392,
        "auto_avg_coral_L3": 36.7,
        "auto_avg_coral_L4": 78.0525,
        "auto_avg_fail_coral_L1": 39.5883,
        "auto_avg_fail_coral_L2": 49.8343,
        "auto_avg_fail_coral_L3": 83.6392,
        "auto_avg_fail_coral_L4": 91.6267,
        "auto_avg_net": 42.3129,
        "auto_avg_processor": 43.9843,
        "auto_avg_fail_net": 74.6732,
        "auto_avg_fail_processor": 73.9313,
        "auto_avg_intake_reef": 94.4689,
        "auto_avg_intake_station": 77.0492,
        "auto_avg_intake_ground_coral": 2.4115,
        "auto_avg_intake_ground_algae": 12.224,
        "auto_avg_drop_coral": 54.9732,
        "auto_avg_drop_algae": 35.6329,
        "tele_avg_coral_L1": 5.5753,
        "tele_avg_coral_L2": 84.5516,
        "tele_avg_coral_L3": 38.8174,
        "tele_avg_coral_L4": 9.1281,
        "tele_avg_fail_coral_L1": 1.9663,
        "tele_avg_fail_coral_L2": 51.5446,
        "tele_avg_fail_coral_L3": 48.1722,
        "tele_avg_fail_coral_L4": 12.3064,
        "tele_avg_net": 59.2356,
        "tele_avg_processor": 95.4284,
        "tele_avg_fail_net": 78.9877,
        "tele_avg_fail_processor": 23.077,
        "tele_avg_intake_ground_coral": 96.798,
        "tele_avg_intake_ground_algae": 31.6881,
        "tele_avg_intake_station": 17.1196,
        "tele_avg_intake_reef": 54.7845,
        "tele_avg_total_points": 75.1077,
        "auto_avg_total_points": 57.8929,
        "endgame_avg_total_points": 11.5108,
        "avg_total_points": 97.2132,
        "tele_avg_total_pieces": 41.2166,
        "auto_avg_total_pieces": 94.7804,
        "avg_total_pieces": 66.7558,
        "tele_avg_total_failed_pieces": 83.8962,
        "auto_avg_total_failed_pieces": 28.567,
        "avg_total_failed_pieces": 65.6241,
        "tele_avg_total_intakes": 63.6319,
        "auto_avg_total_intakes": 39.1194,
        "avg_total_intakes": 64.2574,
        "lfm_tele_avg_incap": 39.2517,
        "lfm_auto_avg_coral_L1": 16.265,
        "lfm_auto_avg_coral_L2": 77.9845,
        "lfm_auto_avg_coral_L3": 90.999,
        "lfm_auto_avg_coral_L4": 86.8015,
        "lfm_auto_avg_fail_coral_L1": 96.2525,
        "lfm_auto_avg_fail_coral_L2": 56.8815,
        "lfm_auto_avg_fail_coral_L3": 73.0496,
        "lfm_auto_avg_fail_coral_L4": 62.7327,
        "lfm_auto_avg_net": 40.7616,
        "lfm_auto_avg_processor": 63.7242,
        "lfm_auto_avg_fail_net": 43.5185,
        "lfm_auto_avg_fail_processor": 16.5234,
        "lfm_auto_avg_intake_reef": 68.5557,
        "lfm_auto_avg_intake_station": 6.6134,
        "lfm_auto_avg_intake_ground_coral": 8.0233,
        "lfm_auto_avg_intake_ground_algae": 90.4761,
        "lfm_auto_avg_drop_coral": 38.5069,
        "lfm_auto_avg_drop_algae": 76.6128,
        "lfm_tele_avg_coral_L1": 25.2633,
        "lfm_tele_avg_coral_L2": 68.3675,
        "lfm_tele_avg_coral_L3": 72.9241,
        "lfm_tele_avg_coral_L4": 6.5647,
        "lfm_tele_avg_fail_coral_L1": 85.7849,
        "lfm_tele_avg_fail_coral_L2": 40.2355,
        "lfm_tele_avg_fail_coral_L3": 30.772,
        "lfm_tele_avg_fail_coral_L4": 24.3283,
        "lfm_tele_avg_net": 60.0281,
        "lfm_tele_avg_processor": 64.8507,
        "lfm_tele_avg_fail_net": 12.54,
        "lfm_tele_avg_fail_processor": 56.5352,
        "lfm_tele_avg_intake_ground_coral": 26.6097,
        "lfm_tele_avg_intake_ground_algae": 82.2401,
        "lfm_tele_avg_intake_station": 4.6536,
        "lfm_tele_avg_intake_reef": 80.6047,
        "lfm_tele_avg_total_points": 85.5833,
        "lfm_auto_avg_total_points": 71.4624,
        "lfm_endgame_avg_total_points": 71.9809,
        "lfm_avg_total_points": 87.7884,
        "lfm_tele_avg_total_pieces": 31.2068,
        "lfm_auto_avg_total_pieces": 17.3472,
        "lfm_avg_total_pieces": 90.2786,
        "lfm_tele_avg_total_failed_pieces": 58.377,
        "lfm_auto_avg_total_failed_pieces": 89.8417,
        "lfm_avg_total_failed_pieces": 42.513,
        "lfm_tele_avg_total_intakes": 82.6344,
        "lfm_auto_avg_total_intakes": 29.1982,
        "lfm_avg_total_intakes": 34.1633,
        "avg_expected_cycle_time": 32.3556,
        "avg_expected_cycles": 92.8558,
        "lfm_avg_expected_cycle_time": 76.0175,
        "lfm_avg_expected_cycles": 43.2368,
        "tele_sd_incap": 0.001,
        "auto_sd_coral_L1": 99.9221,
        "auto_sd_coral_L2": 51.9615,
        "auto_sd_coral_L3": 30.0926,
        "auto_sd_coral_L4": 63.4114,
        "auto_sd_fail_coral_L1": 73.9745,
        "auto_sd_fail_coral_L2": 90.9206,
        "auto_sd_fail_coral_L3": 20.2421,
        "auto_sd_fail_coral_L4": 68.1797,
        "auto_sd_net": 13.5485,
        "auto_sd_processor": 94.7787,
        "auto_sd_fail_net": 63.3893,
        "auto_sd_fail_processor": 43.2544,
        "auto_sd_intake_reef": 99.3983,
        "auto_sd_intake_station": 30.4751,
        "auto_sd_intake_ground_coral": 28.8439,
        "auto_sd_intake_ground_algae": 81.8659,
        "auto_sd_drop_coral": 39.6774,
        "auto_sd_drop_algae": 31.8614,
        "tele_sd_coral_L1": 2.182,
        "tele_sd_coral_L2": 95.9736,
        "tele_sd_coral_L3": 97.9002,
        "tele_sd_coral_L4": 50.8986,
        "tele_sd_fail_coral_L1": 95.7308,
        "tele_sd_fail_coral_L2": 16.199,
        "tele_sd_fail_coral_L3": 20.6503,
        "tele_sd_fail_coral_L4": 93.8857,
        "tele_sd_net": 9.1135,
        "tele_sd_processor": 21.481,
        "tele_sd_fail_net": 54.9857,
        "tele_sd_fail_processor": 92.7433,
        "tele_sd_intake_ground_coral": 35.2421,
        "tele_sd_intake_ground_algae": 54.8324,
        "tele_sd_intake_station": 56.5452,
        "tele_sd_intake_reef": 90.2733,
        "tele_sd_total_points": 61.7037,
        "auto_sd_total_points": 6.2007,
        "endgame_sd_total_points": 91.5584,
        "sd_total_points": 96.6483,
        "auto_sd_total_pieces": 88.3456,
        "sd_total_pieces": 66.3526,
        "tele_sd_total_failed_pieces": 22.7324,
        "auto_sd_total_failed_pieces": 96.4968,
        "sd_total_failed_pieces": 27.181,
        "tele_sd_total_intakes": 24.9152,
        "auto_sd_total_intakes": 33.4659,
        "sd_total_intakes": 34.0478,
        "lfm_tele_sd_incap": 69.6272,
        "lfm_auto_sd_coral_L1": 36.2693,
        "lfm_auto_sd_coral_L2": 84.9291,
        "lfm_auto_sd_coral_L3": 68.4817,
        "lfm_auto_sd_coral_L4": 1.8498,
        "lfm_auto_sd_fail_coral_L1": 95.8975,
        "lfm_auto_sd_fail_coral_L2": 31.7619,
        "lfm_auto_sd_fail_coral_L3": 70.7516,
        "lfm_auto_sd_fail_coral_L4": 25.2064,
        "lfm_auto_sd_net": 28.4398,
        "lfm_auto_sd_processor": 36.2261,
        "lfm_auto_sd_fail_net": 68.6087,
        "lfm_auto_sd_fail_processor": 87.986,
        "lfm_auto_sd_intake_reef": 35.7408,
        "lfm_auto_sd_intake_station": 24.9788,
        "lfm_auto_sd_intake_ground_coral": 35.3649,
        "lfm_auto_sd_intake_ground_algae": 70.91,
        "lfm_auto_sd_drop_coral": 65.2428,
        "lfm_auto_sd_drop_algae": 1.7338,
        "lfm_tele_sd_coral_L1": 53.1003,
        "lfm_tele_sd_coral_L2": 77.9387,
        "lfm_tele_sd_coral_L3": 94.9056,
        "lfm_tele_sd_coral_L4": 55.4302,
        "lfm_tele_sd_fail_coral_L1": 96.0731,
        "lfm_tele_sd_fail_coral_L2": 39.7376,
        "lfm_tele_sd_fail_coral_L3": 60.8416,
        "lfm_tele_sd_fail_coral_L4": 51.3799,
        "lfm_tele_sd_net": 67.6235,
        "lfm_tele_sd_processor": 8.9349,
        "lfm_tele_sd_fail_net": 5.7601,
        "lfm_tele_sd_fail_processor": 36.0284,
        "lfm_tele_sd_intake_ground_coral": 8.5148,
        "lfm_tele_sd_intake_ground_algae": 97.704,
        "lfm_tele_sd_intake_station": 7.2968,
        "lfm_tele_sd_intake_reef": 60.2292,
        "lfm_tele_sd_total_points": 15.3603,
        "lfm_auto_sd_total_points": 70.1461,
        "lfm_endgame_sd_total_points": 78.8823,
        "lfm_sd_total_points": 5.8046,
        "lfm_auto_sd_total_pieces": 5.6989,
        "lfm_sd_total_pieces": 46.7559,
        "lfm_tele_sd_total_failed_pieces": 69.488,
        "lfm_auto_sd_total_failed_pieces": 40.3118,
        "lfm_sd_total_failed_pieces": 71.2465,
        "lfm_tele_sd_total_intakes": 38.9187,
        "lfm_auto_sd_total_intakes": 4.5997,
        "lfm_sd_total_intakes": 75.252,
        "sd_expected_cycle_time": 60.9832,
        "sd_expected_cycles": 7.9631,
        "lfm_sd_expected_cycle_time": 45.3531,
        "lfm_sd_expected_cycles": 80.109,
        "cage_attempts_shallow": 7,
        "cage_attempts_deep": 3,
        "cage_attempts_all": 15,
        "cage_successes_shallow": 82,
        "cage_successes_deep": 66,
        "cage_successes_all": 93,
        "parks": 74,
        "cage_fails_all": 26,
        "cage_fails_shallow": 50,
        "cage_fails_deep": 37,
        "position_zero_starts": 88,
        "position_one_starts": 16,
        "position_two_starts": 59,
        "position_three_starts": 86,
        "preloaded_starts": 50,
        "preload_successes": 1,
        "matches_incap": 45,
        "matches_played": 71,
        "lfm_cage_attempts_shallow": 36,
        "lfm_cage_attempts_deep": 31,
        "lfm_cage_attempts_all": 87,
        "lfm_cage_successes_shallow": 59,
        "lfm_cage_successes_deep": 27,
        "lfm_cage_successes_all": 15,
        "lfm_parks": 65,
        "lfm_cage_fails_all": 30,
        "lfm_cage_fails_shallow": 33,
        "lfm_cage_fails_deep": 3,
        "lfm_position_zero_starts": 13,
        "lfm_position_one_starts": 3,
        "lfm_position_two_starts": 42,
        "lfm_position_three_starts": 67,
        "lfm_preloaded_starts": 95,
        "lfm_preload_successes": 20,
        "lfm_matches_incap": 82,
        "matches_played_defense": 15,
        "lfm_matches_played_defense": 3,
        "matches_with_broken_mechanism": 34,
        "lfm_matches_with_broken_mechanism": 31,
        "auto_max_coral_L1": 31,
        "auto_max_coral_L2": 16,
        "auto_max_coral_L3": 98,
        "auto_max_coral_L4": 100,
        "auto_max_fail_coral_L1": 33,
        "auto_max_fail_coral_L2": 11,
        "auto_max_fail_coral_L3": 93,
        "auto_max_fail_coral_L4": 77,
        "auto_max_net": 31,
        "auto_max_fail_net": 99,
        "auto_max_processor": 73,
        "auto_max_fail_processor": 89,
        "auto_max_drop_coral": 94,
        "auto_max_drop_algae": 1,
        "auto_max_intake_reef": 31,
        "auto_max_intake_station": 75,
        "auto_max_intake_ground_coral": 4,
        "auto_max_intake_ground_algae": 94,
        "auto_max_total_intakes": 96,
        "auto_max_total_pieces": 44,
        "auto_max_total_failed_pieces": 52,
        "tele_max_coral_L1": 59,
        "tele_max_coral_L2": 7,
        "tele_max_coral_L3": 61,
        "tele_max_coral_L4": 82,
        "tele_max_fail_coral_L1": 46,
        "tele_max_fail_coral_L2": 39,
        "tele_max_fail_coral_L3": 80,
        "tele_max_fail_coral_L4": 37,
        "tele_max_net": 89,
        "tele_max_fail_net": 30,
        "tele_max_processor": 32,
        "tele_max_fail_processor": 7,
        "tele_max_drop_coral": 72,
        "tele_max_drop_algae": 61,
        "tele_max_total_pieces": 5,
        "tele_max_total_intakes": 63,
        "tele_max_total_failed_pieces": 66,
        "tele_max_intake_ground_coral": 1,
        "tele_max_intake_ground_algae": 62,
        "tele_max_intake_station": 34,
        "tele_max_intake_reef": 89,
        "max_tele_incap": 28,
        "min_expected_cycle_time": 51.832,
        "max_expected_cycle_time": 34.9886,
        "max_expected_cycles": 67.5228,
        "max_total_intakes": 78,
        "max_total_pieces": 99,
        "endgame_max_total_points": 60,
        "max_total_points": 78,
        "tele_max_total_points": 23,
        "auto_max_total_points": 57,
        "lfm_auto_max_coral_L1": 36,
        "lfm_auto_max_coral_L2": 7,
        "lfm_auto_max_coral_L3": 34,
        "lfm_auto_max_coral_L4": 66,
        "lfm_auto_max_fail_coral_L1": 81,
        "lfm_auto_max_fail_coral_L2": 43,
        "lfm_auto_max_fail_coral_L3": 41,
        "lfm_auto_max_fail_coral_L4": 81,
        "lfm_auto_max_net": 61,
        "lfm_auto_max_fail_net": 0,
        "lfm_auto_max_processor": 77,
        "lfm_auto_max_fail_processor": 36,
        "lfm_auto_max_drop_coral": 43,
        "lfm_auto_max_drop_algae": 87,
        "lfm_auto_max_intake_reef": 83,
        "lfm_auto_max_intake_station": 62,
        "lfm_auto_max_intake_ground_coral": 47,
        "lfm_auto_max_intake_ground_algae": 9,
        "lfm_auto_max_total_intakes": 34,
        "lfm_auto_max_total_pieces": 63,
        "lfm_auto_max_total_failed_pieces": 41,
        "lfm_tele_max_coral_L1": 14,
        "lfm_tele_max_coral_L2": 96,
        "lfm_tele_max_coral_L3": 4,
        "lfm_tele_max_coral_L4": 69,
        "lfm_tele_max_fail_coral_L1": 4,
        "lfm_tele_max_fail_coral_L2": 96,
        "lfm_tele_max_fail_coral_L3": 55,
        "lfm_tele_max_fail_coral_L4": 18,
        "lfm_tele_max_net": 29,
        "lfm_tele_max_fail_net": 85,
        "lfm_tele_max_processor": 23,
        "lfm_tele_max_fail_processor": 55,
        "lfm_tele_max_drop_coral": 18,
        "lfm_tele_max_drop_algae": 35,
        "lfm_tele_max_total_pieces": 35,
        "lfm_tele_max_total_intakes": 4,
        "lfm_tele_max_total_failed_pieces": 77,
        "lfm_tele_max_intake_ground_coral": 7,
        "lfm_tele_max_intake_ground_algae": 57,
        "lfm_tele_max_intake_station": 76,
        "lfm_tele_max_intake_reef": 65,
        "lfm_max_tele_incap": 35,
        "lfm_min_expected_cycle_time": 65.3884,
        "lfm_max_expected_cycle_time": 48.2359,
        "lfm_max_expected_cycles": 55.1225,
        "lfm_max_total_intakes": 83,
        "lfm_max_total_pieces": 59,
        "lfm_endgame_max_total_points": 88,
        "lfm_max_total_points": 66,
        "lfm_tele_max_total_points": 57,
        "lfm_auto_max_total_points": 17,
        "mode_start_position": ["3"],
        "lfm_mode_start_position": ["3"],
        "mode_cage_level": ["N"],
        "lfm_mode_cage_level": ["P"],
        "auto_coral_L1_percent_success": 35.0447,
        "auto_coral_L2_percent_success": 96.5077,
        "auto_coral_L3_percent_success": 39.875,
        "auto_coral_L4_percent_success": 18.5092,
        "auto_net_percent_success": 65.6402,
        "auto_processor_percent_success": 86.2692,
        "tele_coral_L1_percent_success": 13.6703,
        "tele_coral_L2_percent_success": 22.145,
        "tele_coral_L3_percent_success": 8.4212,
        "tele_coral_L4_percent_success": 86.2712,
        "tele_net_percent_success": 36.9423,
        "tele_processor_percent_success": 96.3127,
        "cage_percent_success_all": 42.739,
        "cage_percent_success_shallow": 26.4433,
        "cage_percent_success_deep": 0.9284,
        "park_percent": 90.7682,
        "auto_preload_percent_success": 74.4731,
        "lfm_auto_coral_L1_percent_success": 47.1649,
        "lfm_auto_coral_L2_percent_success": 63.6772,
        "lfm_auto_coral_L3_percent_success": 68.8612,
        "lfm_auto_coral_L4_percent_success": 52.2224,
        "lfm_auto_net_percent_success": 37.8561,
        "lfm_auto_processor_percent_success": 29.105,
        "lfm_tele_coral_L1_percent_success": 97.2647,
        "lfm_tele_coral_L2_percent_success": 70.0788,
        "lfm_tele_coral_L3_percent_success": 70.7004,
        "lfm_tele_coral_L4_percent_success": 79.1353,
        "lfm_tele_net_percent_success": 59.1604,
        "lfm_tele_processor_percent_success": 92.8781,
        "lfm_cage_percent_success_all": 25.3376,
        "lfm_cage_percent_success_shallow": 32.3622,
        "lfm_cage_percent_success_deep": 4.1648,
        "lfm_park_percent": 81.9441,
        "lfm_auto_preload_percent_success": 84.0518,
        "median_nonzero_tele_incap": 9.4786,
        "lfm_median_nonzero_tele_incap": 45.588,
        "median_nonzero_expected_cycle_time": 38.4552,
        "lfm_median_nonzero_expected_cycle_time": 45.3818,
        "median_nonzero_expected_cycles": 91.2815,
        "lfm_median_nonzero_expected_cycles": 33.9215,
        "total_incap_time": 18,
        "lfm_total_incap_time": 23,
    },
    # Obj TIM
    {
        "confidence_rating": 20,
        "team_number": "4665",
        "match_number": 1,
        "alliance_color_is_red": False,
        "scored_preload": True,
        "leave": False,
        "deep": False,
        "shallow": True,
        "parked": True,
        "auto_net": 96,
        "auto_processor": 96,
        "auto_coral_L1": 98,
        "auto_coral_L2": 67,
        "auto_coral_L3": 50,
        "auto_coral_L4": 14,
        "auto_fail_net": 68,
        "auto_fail_processor": 82,
        "auto_fail_coral_L1": 54,
        "auto_fail_coral_L2": 14,
        "auto_fail_coral_L3": 56,
        "auto_fail_coral_L4": 59,
        "auto_intake_ground_coral": 9,
        "auto_intake_ground_algae": 15,
        "auto_intake_reef": 88,
        "auto_intake_station": 13,
        "auto_drop_coral": 19,
        "auto_drop_algae": 63,
        "tele_net": 35,
        "tele_processor": 91,
        "tele_coral_L1": 46,
        "tele_coral_L2": 90,
        "tele_coral_L3": 83,
        "tele_coral_L4": 86,
        "tele_fail_net": 35,
        "tele_fail_processor": 67,
        "tele_fail_coral_L1": 31,
        "tele_fail_coral_L2": 77,
        "tele_fail_coral_L3": 39,
        "tele_fail_coral_L4": 34,
        "tele_intake_ground_coral": 42,
        "tele_intake_ground_algae": 84,
        "tele_intake_station": 42.7139,
        "tele_intake_reef": 55.4344,
        "tele_drop_coral": 19,
        "tele_drop_algae": 4,
        "auto_total_intakes": 45,
        "auto_intakes_ground": 69,
        "auto_total_pieces": 2,
        "auto_total_failed_pieces": 93,
        "tele_total_intakes": 41,
        "total_intakes": 100,
        "tele_total_pieces": 2,
        "tele_total_failed_pieces": 87,
        "total_pieces": 18,
        "total_failed_pieces": 26,
        "auto_total_points": 52,
        "tele_total_points": 50,
        "endgame_total_points": 30,
        "total_points": 52,
        "tele_incap": 64,
        "median_cycle_time": 38,
        "time_from_station_to_reef": 72,
        "time_from_ground_to_reef": 77,
        "time_from_ground_to_net": 15,
        "time_from_ground_to_processor": 63,
        "time_from_reef_to_net": 89,
        "time_from_reef_to_processor": 50,
        "expected_cycle_time": 88.2087,
        "expected_cycles": 43.0454,
        "tele_intake_ground": 31.8826,
        "cage_level": "S",
        "cage_fail": False,
        "start_position": "1",
        "has_preload": False,
    },
    # Pickability
    {
        "team_number": "4665",
        "first_pickability": 73.8308,
        "scoring_second_pickability": 19.9977,
        "defensive_rating_second_pickability": 48.185,
        "ferrying_second_pickability": 75.3507,
        "defense_proxy_second_pickability": 85.2846,
        "lfm_first_pickability": 76.0292,
        "lfm_scoring_second_pickability": 57.8827,
        "lfm_defensive_rating_second_pickability": 34.7771,
        "lfm_ferrying_second_pickability": 12.7042,
        "lfm_defense_proxy_second_pickability": 9.1603,
        "test_second_pickability": 31.663,
    },
    # Predicted AIM
    {
        "match_number": 1,
        "team_numbers": [],
        "alliance_color_is_red": False,
        "has_tba_data": True,
        "actual_score": 79,
        "actual_barge_rp": 0.1338,
        "actual_coral_rp": 96.6104,
        "actual_auto_rp": 61.4419,
        "won_match": False,
        "final_predicted_score": 87.0901,
        "final_predicted_barge_rp": 96.4967,
        "final_predicted_coral_rp": 99.0223,
        "final_predicted_auto_rp": 87.9297,
        "predicted_score": 95.2911,
        "predicted_barge_rp": 19.4247,
        "predicted_coral_rp": 29.5943,
        "predicted_auto_rp": 92.5542,
        "win_chance": 8.7755,
    },
    # Predicted Team
    {
        "team_number": "4665",
        "current_rank": 26,
        "current_rps": 78.292,
        "current_avg_rps": 83.953,
        "predicted_rps": 35.2432,
        "predicted_rank": 69,
    },
    # Scout Precision
    {
        "scout_name": "yyyyyyyyyyy",
        "scout_precision": 84.4422,
    },
    # SIM Precision
    {
        "scout_name": "VrCUpyxKWiZ",
        "match_number": 1,
        "team_number": "4665",
        "alliance_color_is_red": True,
        "sim_precision": 57.9487,
        "auto_reef_precision": 93.3303,
        "auto_net_precision": 73.6889,
        "auto_processor_precision": 86.2642,
        "tele_reef_precision": 26.2993,
        "tele_net_precision": 48.0506,
        "tele_processor_precision": 74.7631,
    },
    # Subj Team
    {
        "team_number": "4665",
        "died": False,
        "was_tippy": False,
        "can_cross_barge": True,
        "high_level_inaccuracy": False,
        "high_level_innacuracy": False,
        "hp_from_team": True,
        "driver_field_awareness": 55.2044,
        "driver_agility": 52.2633,
        "driver_ability": 66.0211,
        "defensive_driver_ability": 34.1078,
        "proxy_driver_ability": 32.3318,
        "test_driver_ability": 20.2929,
        "unadjusted_field_awareness": 19.4478,
        "unadjusted_agility": 6.3472,
    },
    # SS Tim
    {
        "team_number": "4665",
        "match_number": 1,
        "username": "IHjHvLmPnPjIYVcZ",
        "played_defense": True,
        "defense_rating": 2,
        "tim_notes": "rcjiVnGEYVZ",
        "broken_mechanism": False,
    },
    # TBA Team
    {
        "team_number": "4665",
        "team_name": "onVqdVtySUAMAf",
        "foul_cc": 21.5544,
        "leave_successes": 32,
        "lfm_leave_successes": 70,
        "leave_success_rate": 96.1204,
        "spotlight_successes": 73,
        "lfm_spotlight_successes": 49,
    },
    # TBA TIM
    {
        "match_number": 1,
        "team_number": "4665",
        "leave": False,
        "spotlight": True,
        "driver_station": "jatMyvs",
        "climbed_opposite": True,
    },
    # Obj Pit
    {
        "team_number": "6604",
        "drivetrain": 1,
        "drivetrain_motor_type": 1,
        "drivetrain_motors": 49,
        "has_vision": True,
        "has_communication_device": True,
        "has_ground_intake": True,
        "is_forkable": True,
        "weight": 84.4422,
        "length": 84.4422,
        "width": 84.4422,
    },
]


class TestDataGenerator:
    def setup_method(self):
        self.input_filename = "schema/calc_obj_tim_schema.yml"
        self.generate_test_data = DataGenerator(self.input_filename)

        filenames = utils.get_schema_filenames()
        self.schema_files = []
        for file in filenames:
            if file not in self.schema_files and utils.read_schema("schema" + file) is not None:
                self.schema_files.append(file)
        self.schema_files.sort()

    def test_open_schema_file(self):
        schema = self.generate_test_data.open_schema_file(self.input_filename)
        assert utils.read_schema(self.input_filename) == schema

    def test_get_datapoint_collections_generation(self):
        for schema_file in self.schema_files:
            generate_test_data = DataGenerator(f"schema/{schema_file}", seed=0)
            datapoint_collections = generate_test_data.get_datapoint_collections_generation()
            assert "schema_file" not in datapoint_collections

    def test_generate_for_each_datapoint_collection(self):
        for num, schema_file in enumerate(self.schema_files):
            generate_test_data = DataGenerator(f"schema/{schema_file}", seed=0)
            generated_structure = generate_test_data.generate_for_each_datapoint_collection()
            assert generated_structure == CORRECT_SCHEMA_DATAPOINT_COLLECTIONS[num]

    def test_format_raw_data(self):
        for schema_file in self.schema_files:
            generate_test_data = DataGenerator(f"schema/{schema_file}", seed=0)
            formatted_raw_data = generate_test_data.format_raw_data()
            schema = utils.read_schema(f"schema/{schema_file}")
            assert isinstance(formatted_raw_data, dict)
            for datapoint, value in formatted_raw_data.items():
                expected_type = [
                    collection[d]["type"]
                    for collection in schema
                    for d in collection.keys()
                    if d == datapoint
                ][0].lower()
                if expected_type == "bool":
                    assert isinstance(value, bool)
                elif expected_type == "list":
                    assert isinstance(value, list)
                elif expected_type == "str":
                    assert isinstance(value, str)
                elif expected_type == "float":
                    assert isinstance(value, float)
                elif expected_type == "int":
                    assert isinstance(value, int)
            assert "schema_file" not in formatted_raw_data
            assert "data" not in formatted_raw_data

    def test_get_data(self):
        for schema_file in self.schema_files:
            generate_test_data = DataGenerator(f"schema/{schema_file}", seed=0)
            for num in range(5):
                list_of_raw_data_structures = generate_test_data.get_data(num)
                assert isinstance(list_of_raw_data_structures, list)
                assert len(list_of_raw_data_structures) == num


def test_name_sample_data():
    filenames = utils.get_schema_filenames()
    schema_files = []
    for file in filenames:
        if utils.read_schema("schema" + file) is not None:
            schema_files.append(file)
    schema_files.sort()

    for schema in schema_files:
        data = generate_test_data.name_sample_data(f"schema/{schema}", 1)
        assert isinstance(data, dict)
        assert isinstance(data[f"schema/{schema}"], dict)


def test_parse_args():
    sys.argv = [
        "generate_test_data.py",
        "-i",
        "schema/calc_predicted_aim_schema.yml",
        "-n",
        "2",
    ]
    parsed = parse_args()
    assert parsed.infile == sys.argv[2]
    assert parsed.number == sys.argv[4]
